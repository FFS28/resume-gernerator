security:
    enable_authenticator_manager: true

    encoders:
        App\Entity\User:
            algorithm: bcrypt

    password_hashers:
        # Use native password hasher, which auto-selects and migrates the best
        # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_KITCHEN]
        ROLE_KITCHEN:     ROLE_USER

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        secured_area:
            pattern: ^/
            provider: app_user_provider
            form_login:
                login_path: login
                check_path: login
                enable_csrf: false # a activer
                default_target_path: /admin
                use_referer: true
                username_parameter: "login[_username]"
                password_parameter: "login[_password]"
                csrf_parameter: "login[_token]"
#            json_login:
#                check_path: /authentication_token
#                username_path: email
#                password_path: password
#                success_handler: lexik_jwt_authentication.handler.authentication_success
#                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            logout:
                path:  /logout
                target: /

#        api:
#            pattern: ^/api/
#            stateless: true
#            provider: app_user_provider
#            guard:
#                authenticators:
#                    - lexik_jwt_authentication.jwt_token_authenticator

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/, roles: [PUBLIC_ACCESS] }
        - { path: ^/login, roles: [PUBLIC_ACCESS] }
        - { path: ^/admin/, roles: [ROLE_ADMIN, ROLE_KITCHEN] }
